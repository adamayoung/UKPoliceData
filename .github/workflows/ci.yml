name: CI

on:
  push:
    branches:
      - main
    paths-ignore:
      - 'README.md'

  pull_request:
    branches:
      - main
    paths-ignore:
      - 'README.md'

  workflow_dispatch:

jobs:
  test-on-macos:
    name: Test on macOS
    runs-on: macos-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'

      - name: Cache SPM
        uses: actions/cache@v2
        with:
          path: .build
          key: ${{ runner.os }}-spm-${{ hashFiles('**/Package.resolved') }}
          restore-keys: |
            ${{ runner.os }}-spm-

      - name: Cache SonarCloud packages
        uses: actions/cache@v2
        with:
          path: .sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Lint
        run: |
          swiftlint --reporter json > swiftlint.result.json

      - name: Build and test
        run: swift test --enable-code-coverage

      - name: Generate Code Coverage report
        run: xcrun llvm-cov show .build/debug/UKPoliceDataPackageTests.xctest/Contents/MacOS/UKPoliceDataPackageTests -instr-profile .build/debug/codecov/default.profdata Sources/ > info.lcov

      - name: Install SonarScanner
        run: brew install sonar-scanner

      - name: SonarCloud Scan
        run: sonar-scanner -Dsonar.projectKey=adamayoung_UKPoliceData -Dsonar.organization=adamayoung -Dsonar.host.url="https://sonarcloud.io" -Dsonar.sources=Sources -Dsonar.swift.coverage.reportPaths=info.lcov -Dsonar.swift.swiftLint.reportPaths=swiftlint.result.json
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  
  test-on-ios:
    name: Test on iOS
    runs-on: macos-latest
    if: github.event_name == 'pull_request'

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Cache
        uses: actions/cache@v2
        with:
          path: .build
          key: ${{ runner.os }}-spm-${{ hashFiles('**/Package.resolved') }}
          restore-keys: |
            ${{ runner.os }}-spm-
      
      - name: Build and test
        run: xcodebuild -scheme UKPoliceData -sdk iphonesimulator -destination 'platform=iOS Simulator,name=iPhone 12 Pro,OS=14.4' test
  
  test-on-linux:
    name: Test on Linux
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    container:
      image: swift:5.3
      options: --cap-add=SYS_PTRACE --security-opt seccomp=unconfined --security-opt apparmor=unconfined
    
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Cache
        uses: actions/cache@v2
        with:
          path: .build
          key: ${{ runner.os }}-spm-${{ hashFiles('**/Package.resolved') }}
          restore-keys: |
            ${{ runner.os }}-spm-

      - name: Build and test
        run: swift test --enable-test-discovery

  danger: 
    name: "Run Danger"
    runs-on: macos-latest
    if: github.event_name == 'pull_request'

    steps:
      - uses: actions/checkout@v1

      - name: Install tools
        run: brew install danger/tap/danger-swift

      - name: Danger
        run: danger-swift ci
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
